[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash ~/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash ~/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True


[gcode_macro list_sensors]
gcode:
    { action_respond_info(printer.heaters.available_heaters | join(', ')) }
    { action_respond_info(printer.heaters.available_sensors | join(', ')) }

[gcode_macro Power_OFF]
gcode: SET_PIN PIN=Power VALUE=0

[gcode_macro _POWER_OFF_PRINTER]
gcode: SET_PIN PIN=Power VALUE=0
 # {action_call_remote_method("set_device_power",
  #                           device="tasmota_plug",
  #                           state="off")}


[gcode_macro ACTIVATE_POWER_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=60

[gcode_macro DEACTIVATE_POWER_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=0

[delayed_gcode POWER_OFF_PRINTER_CHECK_ACT]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30
  {% else %}
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=60
  {% endif %}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    {% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
        {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            _POWER_OFF_PRINTER
        {% else %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
        {% endif %}
    {% else %}
        {% if printer.idle_timeout.state == "Printing" %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
        {% else %}
            {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
            {% else %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            {% endif %}
        {% endif %}
    {% endif %}
  {% endif %}

  
[gcode_macro M141]
gcode: SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={params.S|default(0)}
      

[gcode_macro M80]
gcode: SET_PIN PIN=Power  VALUE=1
   
  

[gcode_macro M81]
gcode:
    
    SET_PIN PIN=Power VALUE=0

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}



[gcode_macro M190]
rename_existing: M190.1
gcode:
  {% if printer["gcode_macro status_heating"] != null %}
    status_heating
  {% endif %}
    M190.1 { rawparams }
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}


[gcode_macro _CHOME]
gcode:
  {% if printer["gcode_macro status_homing"] != null %}
    status_homing
  {% endif %}
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}

[gcode_macro M109]
rename_existing: M109.1
gcode:
  {% if printer["gcode_macro status_heating"] != null %}
    status_heating
  {% endif %}
    M109.1 { rawparams }
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}



[gcode_macro _MOVE_AWAY]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
      
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing


[gcode_macro PARK_CENTER_REAR]
gcode:
    {% if printer["gcode_macro status_busy"] != null %}
      status_busy
    {% endif %}
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}

    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  
    {% if printer["gcode_macro status_ready"] != null %}
    status_ready
    {% endif %}

#Стартровый код для СуперСлайсера
# START_PRINT EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature] CHAMBER=[chamber_temperature]
#Стартровый код для CURA
# START_PRINT EXTRUDER_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0}

[gcode_macro START_PRINT]
variable_retract: 15
gcode:
    {% set chamber_temp = params.CHAMBER_TEMP|default(0)|float %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(210)|float %}
    {% set bed_temp = params.BED_TEMP|default(60)|float %}
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    CLEAR_PAUSE
    G28
    Smart_Park    
    M220 S100                                                                   # reset feedrate
    M221 S100                                                                   # reset flowrate
   SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={chamber_temp}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}                  # set bed t℃    
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp * 0.75}                # wait until bed is partially heated
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}               # set nozzle t℃
    G90                                                                         # absolute positioning
    M82                                                                         # absolute extrusion mode
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp}                       # wait until
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}                    # wait until
####################################################добавил для убирания подтека во время калибровки################################################
    G1 E-15 F3600                   ; retract
####################################################################################################################################################
    G28                                                                         # home
     BED_MESH_CALIBRATE
     PRIME_LINE
   



[gcode_macro pid_soplo]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=250

[gcode_macro pid_bed]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=105 


[gcode_macro BED]
gcode:
 PROBE_CALIBRATE




[gcode_macro END_PRINT]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-15 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing

   # SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET=0
    M104 S0                          ; turn off chamber
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F3600   ; park nozzle at rear
    #TIMELAPSE_RENDER
    SONG_CRAB_RAVE
   # M109 S50
    
    #M104 S0                          ; turn off hotend
    M117 Finished!
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30
    
    #M81


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    SAVE_GCODE_STATE NAME=PAUSE_STATE
    BASE_PAUSE
    G91
    G1 E-{E} F1500                                                              # retract
    G90
    PARK

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    G91
    G1 E{E} F1500                                                               # unretract
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_STATE MOVE=1
    BASE_RESUME


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    TURN_OFF_HEATERS
    M107                                                                        # turn off fan
    G91
    G1 E-{E} F1500                                                              # retract
    G90
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    PARK


#[gcode_macro BEEP]
#gcode:
   # {% set frequency = params.S|default(1)|float %}
   # {% set frequency = params.S|default(1000)|float %}
   # {% set duration = params.P|default(100)|float %}
   # SET_PIN PIN=beeper VALUE={frequency}
   # G4 P{duration}
   # SET_PIN PIN=beeper VALUE=0

    #[gcode_macro M300]
   
[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
      #SET_PIN PIN=Case_Light VALUE=0
      #SET_PIN PIN=LCD_Light VALUE=0
    {% if S > 0 %}
      SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S }
      #SET_PIN PIN=Case_Light VALUE=0.5 CYCLE_TIME={ 1.0/S }
      #SET_PIN PIN=LCD_Light VALUE=0.5 CYCLE_TIME={ 1.0/S }
      G4 P{P}
    {% else %}
      G4 P{P}
    {% endif %}
      SET_PIN PIN=beeper VALUE=0
      #SET_PIN PIN=Case_Light VALUE=1
      #SET_PIN PIN=LCD_Light VALUE=1
# End Macro M300

[gcode_macro PRIME_LINE]
gcode:
    {% set feedrate = params.F|default(10)|float * 60 %}
    {% set length = 100.0 %}
    {% set width = printer.configfile.settings.extruder.nozzle_diameter|float %}
    {% set height = ( (width / 0.04)|int - (width / 0.04 / 4)|int )|float * 0.04 %}
    # {% set extrude = length * width * height / 1.6 %}
    {% set extrude = length * width * height * 1.5 %}
    SAVE_GCODE_STATE NAME=PRIME_LINE_STATE
    SET_IDLE_TIMEOUT TIMEOUT=7200
    {% if 'Y' in params %}
        {% set x_start = 1.0 %}
        {% set y_start = (printer.toolhead.axis_maximum.y|float - 100) / 2 %}
        G0 X{x_start} Y{y_start} F5000                                          # move to start position
        G0 Z{height} F1500
        G91                                                                     # relative positioning

       G1 E8 F300

        
        G1 Y100 E{extrude} F{feedrate}                                          # draw the 1st line
        G0 X{width} F5000                                                       # move to the next line
        G1 Y-100 E{extrude} F{feedrate}                                         # draw the 2nd line
    {% else %}
        {% set x_start = (printer.toolhead.axis_maximum.x|float - 100) / 2 %}
        {% set y_start = 1.0 %}
        G0 X{x_start} Y{y_start} F5000                                          # move to start position
        G0 Z{height} F1500
        G91                                                                     # relative positioning

         G1 E8 F300
       # G1 E1.2 F{feedrate}                                                       # prime
        #G1 E4 F{feedrate}                                                       # prime
        G1 X100 E{extrude} F{feedrate}                                          # draw the 1st line
        G0 Y{width} F5000                                                       # move to the next line
        G1 X-100 E{extrude} F{feedrate}                                         # draw the 2nd line
    {% endif %}
    RESTORE_GCODE_STATE NAME=PRIME_LINE_STATE


[gcode_macro VINT]
gcode: 
	SCREWS_TILT_CALCULATE









[gcode_macro LOW_TEMP_CHECK]
gcode:  
	{% set extruder_temp = params.T|default(240)|float %}
	{% if printer.extruder.target > extruder_temp %}
	{% set extruder_temp = printer.extruder.target %}
	{% endif %}
	{% if printer.extruder.temperature < extruder_temp %}
	M118 Heating to {extruder_temp}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
	{% endif %}


[gcode_macro M76]
gcode: 
	PAUSE

[gcode_macro M601]
gcode = 
	PAUSE

[gcode_macro G27]
gcode:  
	PARK

[gcode_macro M125]
gcode:  
	PARK



[gcode_macro M600]
gcode:  
	PAUSE

[gcode_macro M701]
gcode:  
	FILAMENT_LOAD

[gcode_macro M702]
gcode:  
	FILAMENT_UNLOAD

[gcode_macro M500]
gcode:  
	SAVE_CONFIG


[gcode_macro PARK]
gcode:  
	{% set x_park = params.X|default(0)|float %}
	{% set y_park = params.Y|default(0)|float %}
	{% set z_park = params.Z|default(10)|float + printer.toolhead.position.z|float %}
	{% set x_max = printer.toolhead.axis_maximum.x|float %}
	{% set y_max = printer.toolhead.axis_maximum.y|float %}
	{% set z_max = printer.toolhead.axis_maximum.z|float %}
	{% if x_park > x_max %}
	{% set x_park = x_max %}
	{% endif %}
	{% if y_park > y_max %}
	{% set y_park = y_max %}
	{% endif %}
	{% if z_park > z_max %}
	{% set z_park = z_max %}
	{% endif %}
	SAVE_GCODE_STATE NAME=PARK_STATE
	G90
	G1 Z{z_park} F1500
	G1 X{x_park} Y{y_park} F5000
	RESTORE_GCODE_STATE name=PARK_STATE


   
# .
# .
# .
# .
# .                         Сушка филамеента на столе принтера
# .
# .
# .
# .
# .
[gcode_macro START_DRYER]
description: Start the heated bed filament dryer.
gcode:
    {% set ChamberTemperature = params.CHAMBER | default(65.0) | float %}
    {% set BedTemperature = params.TEMPERATURE | default(0.0) | float %}
    {% set DryTime = params.TIME | default(14400) | int %}
    ; turn the heaters on, however you do that.
    M140 S{BedTemperature}      ; Sets the print bed temperature without waiting.
    M141 S{ChamberTemperature}  ; [OPTIONAL] Sets the enclosure temperature.
    ; then finally,
    SET_GCODE_VARIABLE MACRO=DRYER_STATUS VARIABLE=time_remaining VALUE={DryTime}
    SET_GCODE_VARIABLE MACRO=DRYER_STATUS VARIABLE=bed_temperature VALUE={BedTemperature}
    SET_GCODE_VARIABLE MACRO=DRYER_STATUS VARIABLE=chamber_temperature VALUE={ChamberTemperature}
    UPDATE_DELAYED_GCODE ID=DRYER_TIMER DURATION=1

[gcode_macro STOP_DRYER]
gcode:
    ; Turn off heaters etc. here
    M140 S0 ; Disable bed heater
    M141 S0 ; [OPTIONAL] Disable enclosure heater/fan
    SET_GCODE_VARIABLE MACRO=DRYER_STATUS VARIABLE=time_remaining VALUE=0
    UPDATE_DELAYED_GCODE ID=DRYER_TIMER DURATION=0    ; Stop the timer.
    M117 Drying Stopped

[gcode_macro DRYER_STATUS]
variable_time_remaining: 0
variable_bed_temperature: 0
variable_chamber_temperature: 0
gcode:
    {% if time_remaining > 0 %}
        M140 S{bed_temperature} ; Reset bed temperature (prevents timeout)
        SET_GCODE_VARIABLE MACRO=DRYER_STATUS VARIABLE=time_remaining VALUE={time_remaining - 1}
        M117 Drying {time_remaining}
    {% else %}
        STOP_DRYER
    {% endif %}

[delayed_gcode DRYER_TIMER]
gcode:
    UPDATE_DELAYED_GCODE ID=DRYER_TIMER DURATION=1
    DRYER_STATUS

[gcode_macro DRY_tpu]
gcode:
    START_DRYER TEMPERATURE=0 CHAMBER=50 TIME=18000

[gcode_macro DRY_PETG]
gcode:
    START_DRYER TEMPERATURE=0  CHAMBER=65 TIME=18000

[gcode_macro DRY_ABS]
gcode:
    START_DRYER TEMPERATURE=0 CHAMBER=80 TIME=18000


# .
# .
# .
# .
# .                  Лазер и мню лазера       
# .
# .
# .
# .
# .
 [gcode_macro M3]
gcode:
    {% set S = params.S|default(0.0)|float %}
    SET_PIN PIN=Laser VALUE={S / 255.0}

[gcode_macro M4]
gcode:
    {% set S = params.S|default(0.0)|float %}
    SET_PIN PIN=Laser VALUE={S / 255.0}

[gcode_macro M5]
gcode:
    SET_PIN PIN=Laser VALUE=0


# Optional: LCD Menu Control

[menu __main __control __toolonoff]
type: input
enable: {'pwm_tool Laser' in printer}
name: Fan: {'ON ' if menu.input else 'OFF'}
input: {printer['pwm_tool Laser'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    M3 S{255 if menu.input else 0}

[menu __main __control __toolspeed]
type: input
enable: {'pwm_tool Laser' in printer}
name: Laser speed: {'%3d' % (menu.input*100)}%
input: {printer['pwm_tool Laser'].value}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M3 S{'%d' % (menu.input*255)}

# .
# .
# .
# .
# .                      Звуки   
# .
# .
# .
# .
# .
[gcode_macro M300]
description:
  "Plays a beep sound.
  @param {int} [S=1000] - Frequency in Hz
  @param {int} [P=100] - Duration in ms
  @param {int} [V=99] - Volume in percent"
gcode:
  # Use a default 1kHz tone if S is omitted.
  {% set S = params.S|default(1000)|int %}
  # Use a 10ms duration is P is omitted.
  {% set P = params.P|default(100)|int %}
  # Use a 25% volume if V is omitted.
  # TODO: implement a logarithmic scale for volume
  {% set V = params.V|default(99)|int %}
  SET_PIN PIN=beeper VALUE={0.1 * (V / 100) if S > 0 else 1} CYCLE_TIME={ 1.0 / S if S > 0 else 1 }
  G4 P{P}
  SET_PIN PIN=beeper VALUE=0 CYCLE_TIME={ 0.001 }

[gcode_macro NOTE]
description:
  "Plays a specified note for a specified duration
  @param {string} [N=C5] - Note to play
  @param {int} [D=500] - Duration of note. There are currently some Klipper limitations to how short a note can be.
  @param {int} [V=99] - Volume in percent
  @param {bool} [S=true] - Whether or not to stop the note after duration"
gcode:
  {% set notes = {
    'C0': 16.35,   'CS0': 17.32,   'D0': 18.35,   'DS0': 19.45,   'E0': 20.60,   'F0': 21.83,   'FS0': 23.12,   'G0': 24.50,   'GS0': 25.96,   'A0': 27.50,   'AS0': 29.14,   'B0': 30.87,
    'C1': 32.70,   'CS1': 34.65,   'D1': 36.71,   'DS1': 38.89,   'E1': 41.20,   'F1': 43.65,   'FS1': 46.25,   'G1': 49.00,   'GS1': 51.91,   'A1': 55.00,   'AS1': 58.27,   'B1': 61.74,
    'C2': 65.41,   'CS2': 69.30,   'D2': 73.42,   'DS2': 77.78,   'E2': 82.41,   'F2': 87.31,   'FS2': 92.50,   'G2': 98.00,   'GS2': 103.83,  'A2': 110.00,  'AS2': 116.54,  'B2': 123.47,
    'C3': 130.81,  'CS3': 138.59,  'D3': 146.83,  'DS3': 155.56,  'E3': 164.81,  'F3': 174.61,  'FS3': 185.00,  'G3': 196.00,  'GS3': 207.65,  'A3': 220.00,  'AS3': 233.08,  'B3': 246.94,
    'C4': 261.63,  'CS4': 277.18,  'D4': 293.66,  'DS4': 311.13,  'E4': 329.63,  'F4': 349.23,  'FS4': 369.99,  'G4': 392.00,  'GS4': 415.30,  'A4': 440.00,  'AS4': 466.16,  'B4': 493.88,
    'C5': 523.25,  'CS5': 554.37,  'D5': 587.33,  'DS5': 622.25,  'E5': 659.26,  'F5': 698.46,  'FS5': 739.99,  'G5': 783.99,  'GS5': 830.61,  'A5': 880.00,  'AS5': 932.33,  'B5': 987.77,
    'C6': 1046.50, 'CS6': 1108.73, 'D6': 1174.66, 'DS6': 1244.51, 'E6': 1318.51, 'F6': 1396.91, 'FS6': 1479.98, 'G6': 1567.98, 'GS6': 1661.22, 'A6': 1760.00, 'AS6': 1864.66, 'B6': 1975.53,
    'C7': 2093.00, 'CS7': 2217.46, 'D7': 2349.32, 'DS7': 2489.02, 'E7': 2637.02, 'F7': 2793.83, 'FS7': 2959.96, 'G7': 3135.96, 'GS7': 3322.44, 'A7': 3520.00, 'AS7': 3729.31, 'B7': 3951.07,
    'C8': 4186.01, 'CS8': 4434.92, 'D8': 4698.64, 'DS8': 4978.03, 'E8': 5274.04, 'F8': 5587.65, 'FS8': 5919.91, 'G8': 6271.93, 'GS8': 6644.88, 'A8': 7040.00, 'AS8': 7458.62, 'B8': 7902.13,
  } %}
  # Use a default C5 if N is ommited.
  {% set note = params.N|default('C5')|string %}
  # Use a 500ms duration is D is omitted.
  {% set dur = params.D|default(500)|int %}
  # Use a 25% volume if V is omitted.
  # TODO: implement a logarithmic scale for volume
  {% set volume = params.V|default(99)|int %}
  # Stop the note by default (this can cause some timing issues)
  {% set stop = params.S|default('true')|string %}

  {% set freq = notes[note] %}

  SET_PIN PIN=beeper VALUE={0.1 * (volume / 100) if volume > 0 else 1} CYCLE_TIME={ 1.0 / freq }
  G4 P{dur}
  {% if stop|lower == 'true' %}
    SET_PIN PIN=beeper VALUE=0 CYCLE_TIME={ 0.001 }
  {% endif %}

[gcode_macro TONE_GEN]
description: "Used for the tone generator menu"
variable_tone_freq: 0.001093
gcode:
  M117 {printer["gcode_macro TONE_GEN"].tone_freq}nothz

[gcode_macro SONG_STAR_WARS_MAIN_THEME]
description: "Plays the Star Wars main theme"
gcode:
  NOTE N=D4 D=133
  NOTE N=D4 D=133
  NOTE N=D4 D=133
  NOTE N=G4 D=1000
  NOTE N=D5 D=1000

  NOTE N=C5 D=133
  NOTE N=B4 D=133
  NOTE N=A4 D=133
  NOTE N=G5 D=1000
  NOTE N=D5 D=500

  NOTE N=C5 D=133
  NOTE N=B4 D=133
  NOTE N=A4 D=133
  NOTE N=G5 D=1000
  NOTE N=D5 D=500

  NOTE N=C5 D=133
  NOTE N=B4 D=133
  NOTE N=C5 D=133
  NOTE N=A4 D=1000



[gcode_macro SONG_CRAB_RAVE]
description: "Plays Crab Rave"
gcode:
  NOTE N=D6 D=150 V=30 S=1
  NOTE N=AS6 D=150 V=30 S=1
  NOTE N=G6 D=150 V=30 S=1
  NOTE N=G6 D=150 V=30 S=0
  NOTE N=D6 D=150 V=30 S=1
  NOTE N=D6 D=150 V=30 S=0
  NOTE N=A6 D=150 V=30 S=1
  NOTE N=F6 D=150 V=30 S=1
  NOTE N=F6 D=150 V=30 S=0
  NOTE N=D6 D=150 V=30 S=1
  NOTE N=D6 D=150 V=30 S=0
  NOTE N=A6 D=150 V=30 S=1
  NOTE N=F6 D=150 V=30 S=1
  NOTE N=F6 D=150 V=30 S=0
  NOTE N=C6 D=150 V=30 S=1
  NOTE N=C6 D=150 V=30 S=1
  NOTE N=E6 D=150 V=30 S=1
  NOTE N=E6 D=150 V=30 S=0
  NOTE N=F6 D=150 V=30 S=1
  SET_PIN PIN=beeper VALUE=0


# TODO: the timing kinda sucks
[gcode_macro one]
description: "one"
gcode:
  NOTE N=C6 D=600 V=30 S=1
  NOTE N=D6 D=600 V=30 S=1
  NOTE N=G5 D=400 V=30 S=1
  NOTE N=D6 D=600 V=30 S=1
  NOTE N=E6 D=400 V=30 S=1
  G4 P150
  NOTE N=G6 D=180 V=30 S=0
  NOTE N=F6 D=180 V=30 S=0
  NOTE N=E6 D=180 V=30 S=0
  NOTE N=D6 D=180 V=30 S=1
  NOTE N=C6 D=600 V=30 S=1

  NOTE N=D6 D=600 V=30 S=1
  NOTE N=G5 D=400 V=30 S=1
  NOTE N=D6 D=600 V=30 S=1
  NOTE N=C6 D=600 V=30 S=1
  SET_PIN PIN=beeper VALUE=0

[gcode_macro SONG_BOOMER]
description: "BOOMER"
gcode:
    M300 P207 S659
    M300 P207 S784
    M300 P207 S494
    M300 P207 S494
    M300 P207 S392
    M300 P207 S494
    M300 P207 S494
    M300 P207 S330
    M300 P207 S784
    M300 P207 S659
    M300 P207 S523
    M300 P207 S523
    M300 P207 S392
    M300 P207 S523
    M300 P207 S523
    M300 P207 S330
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S988
    M300 P207 S523
    M300 P207 S523
    M300 P207 S392
    M300 P207 S523
    M300 P207 S523
    M300 P207 S330
    M300 P207 S659
    M300 P207 S784
    M300 P207 S494
    M300 P207 S494
    M300 P207 S392
    M300 P207 S494
    M300 P207 S494
    M300 P207 S330
    M300 P207 S784
    M300 P207 S659
    M300 P207 S523
    M300 P207 S523
    M300 P207 S392
    M300 P207 S523
    M300 P207 S523
    M300 P207 S330
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S988
    M300 P207 S523
    M300 P207 S523
    M300 P207 S392
    M300 P207 S523
    M300 P207 S523
    M300 P207 S330
    M300 P207 S659
    M300 P207 S784
    M300 P207 S494
    M300 P207 S494
    M300 P207 S392
    M300 P207 S494
    M300 P207 S494
    M300 P207 S330
    M300 P207 S784
    M300 P207 S659
    M300 P207 S523
    M300 P207 S523
    M300 P207 S392
    M300 P207 S523
    M300 P207 S523
    M300 P207 S330
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S784
    M300 P207 S880
    M300 P207 S988
    M300 P207 S523
    M300 P207 S523
    M300 P207 S392
    M300 P207 S523
    M300 P207 S523
    M300 P207 S330

 # .
# .
# .
# .
# .                         
# .
# .
# .
# .
# . 